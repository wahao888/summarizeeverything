Diolch am wylio'r fideo. Diolch am wylio'r fideo. Diolch am wylio'r fideo. Diolch am wylio'r fideo. Diolch am wylio'r fideo. Diolch am wylio'r fideo. 對 欸 瑞亞來了 大家聽得到嗎? 可以喔 好的 那我們前端工程師會議就要開始啦 今天呢 先帶大家看一下我們前端的程式碼 長什麼樣子 然後呢 跟結構呢 是怎麼樣子 好 首先 你們那個 第一件事情就是要先去下載Cursor 你們Cursor還沒下載的可以去下載一下 我放到Cursor 對 這個就是跟VSCode一樣的東西 只是呢 我跟你們講一下它的介面 就是右邊 左邊 左半邊這邊都跟VSCode一模一樣 然後呢 只是右邊它多了一個它可以跟AI聊天的地方 然後呢 右邊這邊就是它 你可以輸入你要做的什麼事情嘛 然後 它上面這個是tag 就是你可以去加說你要改的哪些地方 就是它可以知道你所有的頁面嘛 所以你可以把這個頁面加入 就是看你要修改哪一個部分 你就加這個部分 那其實你不加的話呢 它也是可以找到 只是有可能會漏掉 那加的話就是它可以 它就會更專注的看你有tag的頁面這樣 然後下面就可以問問題嘛 那這邊就是選agent就好了 就是它可以幫你修改 其實它兩個就是 一個是你可以手動 一個是你沒問問題這樣 然後 右邊的話是模型 就是AI模型 目前我覺得比較好用的是 誒 4O已經退役了 我覺得這個cloud 3.7跟java 9 2.5都還蠻好用的 然後O1 你們可以試試 或者是不知道的話就按auto就可以了 好 那首先呢 那個前面 前端的資料夾 我先跟大家先關起來 這樣音樂會不會太大聲 我特別放了一個Bossa Nova的音樂 讓大家不要壓力這麼大 首先呢 還是你們聽不到 看到這個界面壓力就很大 算了 沒有音樂就算了 反正呢 左邊就是整個專案的結構 那AI這個資料夾是預留的 那現在主要就是後端就backend 前端就是frontend 然後這個local file 是我自己本地的一些暫存的資料 所以不用管它 Agent X呢 是我們反向代理 就是我們部署到伺服器上面 然後需要一個中間的代理 然後才可以跟用戶去聯繫 然後 我們還包了Docker 所以就會有Docker檔案 對 那今天focus在前端的部分 前端的話呢 裡面 打開來主要的就是 看看下面這邊有什麼要講的 第一層的話 我們的套件會裝在package.json這個檔案裡 那這沒關係 聽聽就好 Docker file 也是因為我們包在Docker裡面 然後Docker幫大家介紹一下 就是它是一個容器 就是簡單來說 因為我們現在有Windows 有Mac 然後可能還有 Linux 就是各種系統 那 我們的這些程式要在各個系統上跑呢 其實都會有不同的 不同的一些會有一些差異 所以沒辦法直接在不同 同一個程式在不同的介面跑 對 所以我們就會把這個程式裝在Docker裡面 包著 那Docker就會去適應每一個系統 這樣子 所以我們只要有Docker包著 我們就可以在 搬到Mac上就可以在Mac上跑 搬到Windows上就可以在Windows上面跑 對 總之它就是一個裝在裡面的東西 然後所有的套件呢 就會直接裝在Docker裡面 然後換一個系統的時候呢 就是不需要再重新安裝 算是一個很方便的東西 對 然後 這邊就先跳過 那裡面 現在最重要的就是我們的頁面 頁面都會放在src裡面 然後src裡面的第一層呢 最重要的給大家看就是我們的入口 入口就是app.js這個檔案 然後我這邊已經打開了 然後 我先介紹檔案再講裡面好了 對 然後呢 這邊有一些設置不用管它 然後i18n是我們的翻譯 這個蠻重要的 就是會一直用到 因為我們前端的 頁面顯示的字呢 都是 先用一個替代的英文在那邊 然後呢 真正顯示出來 看是中文還是英文呢 會放在這個翻譯 i18n這個翻譯的資料夾裡面 這個檔案裡面 然後上面的話 最上面是英文的翻譯 就是 前端的頁面顯示feedback 然後英文呢 如果選擇英文的話呢 顯示就是這個feedback 那如果是 中文的話呢 中文的翻譯就會在 這個中間以下 反正上半部是英文 下半部是中文 中文的feedback顯示出來 就會是意見回饋 對 大概是這個樣子 所以就是前面會有一個替代的文字 去 所以到時候如果我們有新增一些 比如說日文韓文什麼的 我們就一樣再新增一個 一個區塊 然後呢 這邊就也是feedback 然後後面就是寫feedback的日文 這樣子

好 那 其他的檔案都不用管 只需要知道 app.js 跟 iSpot n.js 就好 暫時 那 app.js 呢 就是我們的入口嘛 入口的話呢 前面就會 如果大家有什麼問題隨時可以問哦 直接插斷我或者是你們在那個 那個聊天室 打也可以 對然後呢 app.js 就是上面的話是 import 就是會把我們的頁面 的路徑放進來 然後下面的話呢 則是我們對外的網址 就是今天我們的網域是 kyp.daemontech.com 然後後面斜線 放這一段 然後就會到我們這個 捐獻的一個成功的的頁面 對所以呢這個後面這些就是 前端網頁的路徑 然後呢 上面這個是我們本地資料夾的 這個路徑 ok 到這邊有什麼問題嗎 Fria 有沒有什麼問題 啊我問一個問題哦 因為剛好在講這個 我們自己本地儲存的那個 文件的路徑啊 跟前端的網址對應的根目錄 取名的方式是不一樣的嗎 還是是一樣的 基本上是一樣的 是一樣的好 好那我們 但是有可能我不小心會設錯 那這就是我不好的習慣 有可能但應該還是看得出來吧 對不對看出來是什麼 為什麼我看一下應該是都一樣 好 好目前應該是都一樣 對 就是後面這個是檔案的名稱 比如說我給一個 home 好了 那我們的所有的這些檔案呢 都會放在 這個 src 裡面的 pages 的這個資料夾裡面 所以這邊就是所有的頁面哦 都在這邊 有沒有那 home 就在這邊 好 ok 好還有誰有問題嗎 Yuki Yuki 問一個問題 目前還在聽有問題會問 好 ok Solar 應該沒問題啊 好的有問題隨時問哦 好 因為這個這個昨天我有先跟 solar 這個預告過了一次 好所以呢 我看看 我們全部的頁面就會放在 pages 這邊 那上面這些 books 這個不用管他 這是我們 做金流追蹤的一個中間的一個 小插件小東西 然後 context 這個也不用 也不用了他 這個是我做那個loading 畫面 他的一個 就是裡面的一些設定而已 然後呢 component 就是 呃 好 component 裡面重要的就是有這個 navbar 跟 footer 就是我們上面網頁上面的導航列跟 最下面的 footer 對那其實這個也都做好了來就不用管他 但只是如果之後有新增頁面對不對 然後大家會需要有一個入口點 那通常就會 呃比較 主要的會放在 navbar 上面就導航列上面 那比較次要的比較不重要的 就會放在 footer 對大家你們也可以旁邊開一個我們的 kyt 的網站對應著看 看一下 等下哦 等一下 啊 問題你們直接講好了,我把這個聊天室這個先關掉 好那 所以我們的這個導航列啊就是上面這一行嘛 最上面這一行 然後 footer呢 就是最下面這邊 對那這些就是我們的一些入口點嘛 所以假設今天我點關於我們 然後你看網址就會寫就是about 那我們就可以看說假設今天我們要新增一個關於我們頁面好了 對我就會在 pages 這邊呢先新增一個 about 我好像叫 about us ok 然後呢這邊新增了一個頁面之後呢 呃裡面還不還不用寫哦 反正你現在想說我現在要做這個頁面對不對 你就在這邊新增一個頁面啊怎麼新增 上面這邊有一個新增檔案左邊這個 就是新增檔案 然後右邊這個是新增資料夾 好 那個那如果你要新增在 pages 這裡面 你就點一下他他會縮起來嗎 在這邊點新增也可以 他就會出現了 然後呢在打尿的名字 然後呢我們都是用 javascript 就是點 js 這樣 ok 那我們假設我們就是 新增了 about us 然後這邊頁面新增了之後呢 我們就要到 app.js 這邊 把我們的 about about 把我們的 about us 這個檔案 要把它 import 進來 import 進來然後 我們就是 等於是說這個路徑就變成了這個 就代表這個變數 這個變數就代表這個路徑對不對 好然後呢第二個步驟呢 就是在下面呢 要把剛剛這個變數呢放進來 然後 呃這邊 就是寫我們網址網址列後面的路徑 所以這個是寫下 about 對不對 所以我們這邊看到我們就是 前面這個都固定 所以這個這個路徑呢 後面就只要寫斜線 about 所以到這邊之後 我們就會進入到 about us 的 這個頁面裡 好 這邊有沒有什麼問題 會不會太簡單了 哎我先我問一下哦 freya 的話是 程式碼還沒有寫過對不對 是的好我 之前的工作是負責糾正工程師 哈哈哈哈 我這個畫面不是不是這樣子的 好那那我講現在講這些會不會有點 太難懂 我我覺得還好 但我呃順便有個問題想要問 我們這個 kyt 現在這個 beta 的測試站呢 他是已經有部署 cicd 的嗎 還是沒有 哦沒有 沒有所以就是靠自己推上去這樣 對要自己推上去因為 因為因為 cicd 就是 現在還不是一個很穩定的版 會一直改來改去吧 所以變成是哦不小心 你如果設定自動部署的話呢他就會 吧所以所以基本上 所以基本上可以不用擔心我寫出什麼 沒錯沒錯沒錯所以就不用擔心 而且如果之後要 你們要一起做的時候呢 也會另外開一個新的分支 然後去那邊 所以完全不用擔心說會把現在現有 真的是可運行的東西搞砸了 不用不用擔心 對然後到時候做完要合併 進來的時候我也會看過 然後我也會測試過 所以你們你們都不用太擔心那個 哦好好那我知道了 好然後那我就繼續了哦 呃所以整個前端創建的流程 就這樣很簡單 兩個步驟一個就是你們你這邊 在 pages 裡面創建這個新的頁面 第二個步驟就是到 app.js 這邊 把剛剛的路徑 import 進來把下面新增一行這個 網網址的路徑就這樣 很簡單吧 那 那 我再回到 home 這邊 哦 我包20好了 打大一點 那這個 呃上面的部分呢 想想看哦 因為我們我們用的框架是用 react 然後呢用的 樣式 css 樣式是用 tailwind css 那他的特色就是呢 我們不會另外多一個 什麼

style.css 这个档案 就是 hellwing css 的特色就是所有的 设定我们就直接写在 class name 里面 那这样我们就不会因为说哦上一层可能是 哪边设定到了 然后会覆盖掉什么的 然后你现在设定可能又会不一样 所以要一直去调整 global 的这些样子等等的 就不会有这么麻烦的问题 那相对的比较 就是整个页面看起来会没有 会好像很长一样 对那第一次看 当然会觉得说哦很乱很多 但其实他 就是你懂了他这个逻辑之后 你就可以知道说哪些你可以先不用去理他 这样子 好那整个前端页面的架构呢 上面一样是 import 我们需要的东西 对然后呢 嗯要 import 什么呢 这个你们 如果之后会新增页面的话 我们我都是直接叫 ai 去参考 wallet-risk 这个 就是这个档案 因为他基本上 就是最基本的架构他都有了 那我那我就直接用这个来讲好了 第一个就是 就是 reactor 的基本的东西他会有 然后呢这个 是 好 第二个这个东西呢 exiles 他是跟后端通讯的一个 一个媒介 所以我们如果有需要 呃运算就是 或者是要需要后端的 api 后端去连 api 我们就要透过 exiles 那他的设定档 就是已经设定好在这个档案里面了 对那里面 也有新增 csrf 是一个 算是资安的东西 就是可以保障我们网站的安全的东西 对所以这这个都是固定的哦 然后呢 第三个就是翻译的东西 这也是固定的 然后第四个呢这个是 导航的东西就是今天你想要转跳页面 你可以用这个东西去转跳 对那第五个也是我们的跟后端 连线的一个设定 所以这个也都不需要去动 反正就把加进来就对了 然后第六个这个是样式的东西 就是他是 icon 他是 react 呃 那一的套件里面有的 icon 所以今天如果 你有用到哪些 icon 的话呢 你也可以去直接去搜寻 然后看那个 icon 长什么样 你可以自己去挑 或者是说 反正有需要用到的话 这边就要就要把它 import 进来 对然后 toast 是提示的东西 就是今天我们 如果 到钱包查询 我来输入一个 输入一个 打错一个东西啊 就是这边不是一个正确的地址 所以呢我们按搜索之后他就会跳一个提示 那这个提示就是这个 toast 做的 我看一下 很好 没有跳 哈哈哈 有有有在上面他跑比较久 好 所以上面这个提示 这个跳出来这个还会读秒 这个这个就是 toast 的在做的事不然正常 预设的提示就是很丑嘛 会从上面跳一个下来说错误 这样子 好那第一个区块就是 import 就是把我们需要的东西呢 套件呢引入进来 然后再来呢 第二个区块呢 就是上呃上半部是一些功能的部分 就是今天我们有需要 在前端做一些简 简单的一些判判断什么的 或者是今天呢要跟后端连线 的时候就需要把资料传到后端的时候 像这个是 exiles 他就是会从后端 去检查 current user 就是你现在登录的这个 这个人是谁 然后要验证过了之后呢 他就会 他就会 就是要验证你这个使用者身份这样子 那这个需要靠后端的 后端的话 所以就是要透过 exiles.get 就是 读取资料 然后 api.url 记得吗 他这个是 这边 这边引入的 对那这个其实是当初在在设定就是 呃生产环境跟开发环境不同的时候 我们要走哪一个 哪一个 哪一个伺服器 对就是反正要走哪一个路径 去找到我们要的东西了 简单来说是这样 对那但是这些你们就都不用理他 今天你只要记得说我们 如果要跟后端连线 的样子就会是长得像这样子 response array await 然后 exiles 点 他是 get 和 post 然后呢这个都固定 api.url 然后这个就是 后端的 api 就是 对后端的 api 我讲这样子 你们可以听懂吧 后端的路由 对后端的路径 对就是我们会连到这个路径的名称 去拿我们要的资料 对然后呢这边就是会有一些 呃 判断啊除错啊等等的 这个也没关系 反正你们现在都不用特别的记得 什么东西你们只要知道说 看到这个东西知道他是跟后端 的 api 有关的就好了 这样 好那一路下来这些都是一些 呃 比较功能性的东西就会放在上半部 一路一直到 一直到 一直到这边 return 开始 才是我们真正画面上会显示的东西 所以呢你看哦 这边有一个 hy 的标签嘛 大标题 然后呢这个东西 key 是一个函数 我设定的一个函数就是我们 sorry 我们整个网站的翻译呢 i18 翻译就是用 key 函数去包 那我们就放一个替代的词在这边 对这个这个词呢叫做 wally risk query 那 我们就可以去 i18n 看一下哦 我现在复制起来哦 然后去 i18n 这边 然后呢按 command f 搜寻 command v 这边 然后就会找到说哦 这个词对应出来显示的是什么 就是钱包查询 也就是这一个 ok 吗 来一次哦 来一次哦 前端这个我现在在 wally risk 这边哦 然后在 return 后面就是 整个画面渲染的部分 然后我们会有个替代词 被一个 key 函数包着 那这个词对应出来显示的是什么东西呢 就会设定在我们的 i18n 这边 这边 i18n 然后的这边 wally risk query 就是刚刚的那个替代词 那他显示出来的中文 就会是钱包查询 那英文是什么呢 英文就是 wally risk query 所以我现在如果换成英文 有没有他就是显示这个 懂吗 好 freya 提问 哼现在是直接指名我吗 好我问个问题 呃因为现在看到的话就是大概是标题 跟一些栏位比较固定格式的地方 有这个 key 函数的部分吗 那我想问的话是呃内文的部分 他也是靠 key 函数吗 也是也是 所以就是内文假设比较多的话呢 我就会比较就会分的比较细 那如果比较少的话像是这边 wally risk detail 就会 就是这边 wally risk detail 这样子 所以每一个字哦 每一个所有显示出来的字 全部全部都是用 key 函数包着一个替代的词 显示出来的 包括我想问一下 像是区块链学院那边 是有一些内容篇幅比较长的文章 也是这个模式吗 呃区块链学院的话这边是用 这个markdown的语法 好对 他是自动转换的是不是 我就来试试 对他是 他是自动他是整他是整块去转的 所以就我们不需要设定说哦想了解 如何避免加密货币 然后这个的翻译是什么不用 就不用就不会这么麻烦 嗯哼 呃 区块链学院 上面这个就是区块链学院吗 然后呢 这边 好这个就是上面啊 这个是插入图片 就是这个文章列表 然后这边有一个video 这个图片是影音列表的图 然后 再下来是什么 啊我们这么久了吗 哦因为他只有40分钟 好我们今天就打算就讲40分钟就好 然后 再下来 这边有一个markdown这个 ok 我们的所有的文章呢 是用markdown的语法去做的 然后所以他就是有一个套路

就是可以直接把markdown的東西呢 顯示在這邊 好然後順便就給你們看說 markdown的是什麼東西我們怎麼上架的 要上架 那個文章的話就到管理員儀表板 新增文章 這邊有很多區塊對不對 然後我們不是有中英翻譯嗎 所以這邊就比較麻煩 就是上面這一塊是中文 然後呢你還要自己先去 把GPD翻成英文放在下面 那標題是一個 摘要目前是寫上去但是 沒有顯示出來 然後內容就是所有的內容了 標籤的話呢可以顯示標籤 就是他會顯示在 我開一個 他會顯示在左上角這個 這就是標籤 他會顯示第一個 對然後呢英文在這邊 我開一個 如果你已經發文了之後 你就可以 你說你說直接說 好那因為剛剛你有講有摘要的部分 你說不會顯示是 他他主要的用途是在SEO優化上嗎 還是對一個是SEO 一個是我還沒有設定的 對原本摘要的用意 是想說可以顯示在 就是主畫面的時候 可以講摘要是什麼 但是好像也不太需要 目前就不知道該怎麼放 因為現在就是直接就顯示文章的前面 好像就可以了 顯示摘要就沒必要 所以我就先沒有放 好然後好ok嗎 ok沒事沒事好好好 然後呢 所以你整個文章的語法用markdown 就是這樣你看會有這種星星 就你跟GPD聊天的時候 他其實你複製整段 他也是用markdown的語法 就是他這個就是出體的意思 這個就是第二H2 第二大標題 兩個井字是H2 一個井字就是H1 對然後呢這個 就是那個項目符號 對所以左邊是你編輯的區塊 是你你打的文字 右邊是他顯示出來會長怎麼樣 對那這邊有個圖對不對 他其實是這邊 就是他我這邊上傳一個圖片之後呢 他會上傳到我們的 AWS的伺服器 然後等他一下之後 他就會跑出一個網址出來 那他的語法就是前面這個是替代的文字 就是今天假設這個圖片不顯示了 他會顯示這個東西 那這個圖片是從哪來的 就是從這個網址過來 然後其實就是這張圖 對這個是大概的markdown語法的結構 所以呢如果要上文章的話就是 叫GPT幫你改成markdown語法 然後把他貼過來就好了 對那在我們的code裡面呢 顯示呢就是用 他是有一個markdown的一個 一個怎麼講顯示器的這個東西套件 所以他不會是 不會需要i18n的翻譯這樣 翻譯我們在這邊自己處理 對好 目前還行嗎 我問一個問題哦 就是我們所有的圖片都是發 放在那個AWS的伺服器嗎 對那那個位置的話他是怎麼產生的 圖片的位置 這個連結嗎 對他自動產生的我已經設定好 他會自動產生 所以他是包含我們在編輯這一段代碼的時候 我直接插入就可以嗎 還是說他是怎麼操作的 對那個就是呢你要上傳圖片 你就點你要上傳圖片 你就點你要的位置 點選這個插入圖片 然後他就會你讓就正常你選選圖片嘛 選完之後打開 不如我就現在選一個 沒有我是說在那個 哪一個編輯 左邊的那個編輯畫面的時候 這邊的話你不用去管 因為這個是後端的 是所以你如果前面這邊要插入圖片的話 哦好我懂你意思了 前面要怎麼插入圖片對不對 是會比較緊 但是我們還有5分鐘 就是這邊 你現在我們不是會放一些背景圖嗎 那圖片的路徑要放哪裡呢 就是放在public裡面 剛剛還沒有講到呢 在這邊 圖片全部都是在public裡面 全部在public跟images裡面 好在這邊 其實現在也沒有多少圖 所以呢我就全部放著 就沒有再另外分資料夾 但是如果之後有一些 呃分類的話我們可以再分 那路徑路徑的話就會不用寫public 因為他自動react會自己去抓 對路徑的話你就是寫images 然後呢你的檔名是什麼 啊記得副檔名要寫點png 或是點jpg要寫上去 就這樣 ok 嗎 那你可能會想說 我到底要怎麼記得 之後要怎麼插入圖片呢 我還要記得style等於大瓜胡 大瓜胡background image 然後反斜線url 吧吧吧這一整串 我怎麼可能記得會打錯對不對 不用擔心這些東西你都不用打 這些東西都是AI去打的 所以你只要在cursor這邊跟他說 好我說 我就這是banner嗎 比如說我這邊框起來 然後他就會有add to chat 按一下他就會把這一行加進來哦 然後呢我就說 我想要在 banner 下方加 插入一張 下方加 插入一張 背景圖 然後檔名叫做 名叫做abc.png 好 搞不好這樣就可以了enter 那我們就看他怎麼秀 不如不如不如不如 再等他一下哦 你要等他這邊 好玩哦因為他有可能邊跑會發現哦 哪邊又錯了他又改一下 你看他現在又改了一下 你看他說語法錯誤被我撂到了吧 在跑在跑在跑 ok那這邊就跑完了他說好的我已經 修正好了 然後已經顯示在banner下方結束 他沒有再轉了 然後 這個綠色的部分就是新加入的部分 就會顯示綠色 你看他就會自己幫你寫了 嗯好亮哦 哦 哎 這樣呢 沒螢幕 沒螢幕 瑞亞你看得到我的螢幕嗎 哎你也看不到哎 我看得到螢幕可是我沒有看到你的視窗 就是你剛剛的編輯視窗 他好像消失了 怎麼會這樣 剩一分鐘 拜託 他顯示 顯示驚嘆號哎 哦 我的那個我的那個 啊我的那個什麼監管軟體就搞搞搞搞我 好沒關係我先口說一下 反正呢他就會出現在下方 他自己自己會打好了 然後綠色的是新增的 紅色的是 他刪減的 那如果你要的話呢你就會點選assign 如果不要的話呢就點選reject 這樣所以你根本不用記語法是怎麼樣 你只要跟 ai 講就好了 對 好 大概這樣我就先reject掉然後 我先今天就先大概跟大家講這樣就好了 然後我們再約 我看看還有什麼之後要講的 然後可以再約 那你們有什麼問題呢 再跟我再隨時跟我講 好今天就這樣下課 拜拜 拜